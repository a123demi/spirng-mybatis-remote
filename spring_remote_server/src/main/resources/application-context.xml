<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
   		http://www.springframework.org/schema/aop
   		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
   		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://cxf.apache.org/jaxws     
        http://cxf.apache.org/schemas/jaxws.xsd">

	<description>application-context config</description>

	<!-- 依赖注入,包扫描 -->
	<context:component-scan base-package="com.lm.core"></context:component-scan>

	<!-- 依赖文件 -->
	<context:property-placeholder location="classpath:config.properties" />

	<!-- 数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 启动事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis.xml"></property>
	</bean>

	<!-- 包扫描mybatis配置文件 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lm.core.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- spring rmi -->
	<bean name="urseRmiService" class="com.lm.core.service.impl.UserRmiServiceImpl" />
	<bean name="rmiTest" class="org.springframework.remoting.rmi.RmiServiceExporter">
		<property name="service" ref="urseRmiService" />
		<property name="serviceName" value="urseRmiServiceTest" />
		<property name="serviceInterface" value="com.lm.core.service.UserRmiService" />
		<property name="registryPort" value="1021" />
	</bean>

	<!--spring httpInvoker -->
	<bean name="userHttpService" class="com.lm.core.service.impl.UserHttpServiceImpl" />
	<bean name="userExporter"
		class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
		<property name="service" ref="userHttpService" />
		<property name="serviceInterface" value="com.lm.core.service.UserHttpService" />
	</bean>

	<!-- spring webservice -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<!-- <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" /> -->
	<!-- <import resource="classpath:META-INF/cxf/cxf-servlet.xml" /> -->

	<bean id="userWsService" class="com.lm.core.service.impl.UserWsServiceImpl" />

	<!-- 2:通过jaxws:server方式来配置webservice -->
	<jaxws:server serviceClass="com.lm.core.service.UserWsService"
		address="/userWebService">
		<jaxws:serviceBean>
			<ref bean="userWsService" />
		</jaxws:serviceBean>
	</jaxws:server>
	
	<!-- activemq -->
	<import resource="classpath:application-context-activemq.xml"/>
</beans>